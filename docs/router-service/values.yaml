# Default values for router-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

serviceName: router-service

region:
  # Can be PLACE with place name or BBOX with dict {south: a, west: b, north: c, east: d}
  # Example PLACE 'Brussels, Belgium'
  # Example BBOX {south: 51.075920, west: 3.180542, north: 51.522416, east: 5.907898}
  type: PLACE
  area: Brussels, Belgium
serviceUri:
  car: http://car-service/vehicle
  payment: http://payment-service/getPrices
masstransit:
  input: Coordinate_Service.DTOs:PublishCoordinatesDTO
  output: LTS.DTOs:RouteDTO
rabbitmq:
  host: rabbitmq
  port: "5672"
  user: guest
  password: guest
  queue: py-router
  virtualHost: /


replicaCount: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
